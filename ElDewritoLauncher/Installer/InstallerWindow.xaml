<controls:WindowBase
    x:Class="EDLauncher.InstallerWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:EDLauncher.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="ElDewrito Installer" Width="800" Height="480" FontSize="16"
    Foreground="#bec5d4"
    Style="{StaticResource WindowBase}"
    mc:Ignorable="d">
    <Window.Resources>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="#f8f8f8" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="BorderBrush" Value="#252a41" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                            <ScrollViewer x:Name="PART_ContentHost" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="CheckBox">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>

                            <StackPanel Orientation="Horizontal">
                                <!--  Custom square with larger size  -->
                                <Border
                                    x:Name="Border" Width="16" Height="16" Margin="0,0,0,0"
                                    VerticalAlignment="Center" Background="#d8d8d8" CornerRadius="2">
                                    <!--  Checkmark  -->
                                    <Viewbox Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Path
                                            x:Name="CheckMark" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                            Data="M1.2,6 L5,8.5 L10,1" Stroke="#f8f8f8" StrokeThickness="2"
                                            Visibility="Collapsed" />
                                    </Viewbox>
                                </Border>
                                <!--  Content  -->
                                <ContentPresenter x:Name="Content" Margin="8,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" TextBlock.FontSize="15" TextBlock.Foreground="#d8d8d8" />
                            </StackPanel>



                        </Grid>
                        <ControlTemplate.Triggers>
                            <!--  Show checkmark when checked  -->
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                                <Setter TargetName="Border" Property="Background" Value="#FF0087B5" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="{x:Type Hyperlink}">
            <Setter Property="Foreground" Value="#FF0087B5" />
            <Setter Property="TextDecorations" Value="None" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#f8f8f8" />
                </Trigger>
            </Style.Triggers>
        </Style>




        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeDashArray="1 2" StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="Button.Static.Background" Color="#33000000" />
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF0087B5" />
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#55000000" />
        <SolidColorBrush x:Key="Button.MouseOver.Foreground" Color="#f8f8f8" />
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#AA49C4FF" />
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#44000000" />
        <SolidColorBrush x:Key="Button.Pressed.Foreground" Color="#f8f8f8" />
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#f8f8f8" />
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#33000000" />
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#1149C4FF" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#a8a8a8" />

        <Style x:Key="BaseButtonStyle" TargetType="{x:Type ButtonBase}">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="#d8d8d8" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False" RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF0087B5" />
                                <Setter Property="Foreground" Value="#FF0087B5" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                                <Setter TargetName="border" Property="TextElement.Foreground" Value="{StaticResource Button.MouseOver.Foreground}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                                <Setter TargetName="border" Property="TextElement.Foreground" Value="{StaticResource Button.Pressed.Foreground}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="{x:Type ToggleButton}" BasedOn="{StaticResource BaseButtonStyle}" TargetType="{x:Type ToggleButton}" />

        <Style x:Key="{x:Type RepeatButton}" BasedOn="{StaticResource BaseButtonStyle}" TargetType="{x:Type RepeatButton}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        </Style>

        <Style x:Key="{x:Type Button}" BasedOn="{StaticResource BaseButtonStyle}" TargetType="{x:Type Button}" />


    </Window.Resources>

    <Window.Background>
        <ImageBrush ImageSource="/Assets/installer_background.jpg" Stretch="UniformToFill" />
    </Window.Background>

    <controls:WindowBase.BackgroundLayer>
        <Border Background="#88000000" CornerRadius="14" />
    </controls:WindowBase.BackgroundLayer>

    <ContentControl x:Name="stage" Margin="30,60,30,30" />
</controls:WindowBase>
